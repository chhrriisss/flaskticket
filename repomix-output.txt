This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repomix on: 2025-08-21T09:08:13.994Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

================================================================
Directory Structure
================================================================
config.json
main.py
packages.json
templates/admin_config.html
templates/admin_users.html
templates/admin.html
templates/base.html
templates/create_package.html
templates/dashboard.html
templates/edit_field.html
templates/edit_package.html
templates/edit_user.html
templates/login.html
users.json

================================================================
Files
================================================================

================
File: config.json
================
{
  "fields": {
    "status": {
      "type": "dropdown",
      "options": [
        "Ongoing",
        "Hold",
        "Completed",
        "Cancelled"
      ],
      "label": "Status",
      "editable": true
    },
    "port_name": {
      "type": "text",
      "label": "Port Name",
      "editable": false
    },
    "project": {
      "type": "text",
      "label": "Project",
      "editable": false
    },
    "sow": {
      "type": "dropdown",
      "options": [
        "Yes",
        "No",
        "Pending"
      ],
      "label": "SOW",
      "editable": true
    },
    "pr": {
      "type": "text",
      "label": "PR",
      "editable": true
    },
    "tr": {
      "type": "text",
      "label": "TR",
      "editable": true
    },
    "target_date": {
      "type": "date",
      "label": "Commercial Target Date",
      "editable": true
    },
    "action_by": {
      "type": "multiselect",
      "options": [
        "Corp. Com.",
        "CPC",
        "HO Comm.",
        "Site",
        "User"
      ],
      "label": "Action By",
      "editable": true
    }
  }
}

================
File: main.py
================
from flask import Flask, render_template, request, redirect, url_for, session, flash, jsonify
import json
import os
from datetime import datetime
from functools import wraps

app = Flask(__name__)
app.secret_key = 'your-secret-key-change-this'

# File paths for data storage
USERS_FILE = 'users.json'
PACKAGES_FILE = 'packages.json'
CONFIG_FILE = 'config.json'

def load_json_file(filename, default=None):
    """Load JSON file with error handling"""
    try:
        if os.path.exists(filename):
            with open(filename, 'r') as f:
                return json.load(f)
        return default or {}
    except:
        return default or {}

def save_json_file(filename, data):
    """Save data to JSON file"""
    try:
        with open(filename, 'w') as f:
            json.dump(data, f, indent=2)
        return True
    except:
        return False

def init_default_data():
    """Initialize default data if files don't exist"""
    # Default users
    if not os.path.exists(USERS_FILE):
        users = {
            "admin": {
                "password": "admin123",
                "role": "admin",
                "name": "Administrator",
                "can_assign": True
            },
            "user1": {
                "password": "user123",
                "role": "user",
                "name": "User One",
                "can_assign": False
            }
        }
        save_json_file(USERS_FILE, users)
    
    # Default config
    if not os.path.exists(CONFIG_FILE):
        config = {
            "fields": {
                "status": {
                    "type": "dropdown",
                    "options": ["Ongoing", "Hold", "Completed", "Cancelled"],
                    "label": "Status",
                    "editable": True
                },
                "port_name": {
                    "type": "text",
                    "label": "Port Name",
                    "editable": False
                },
                "project": {
                    "type": "text",
                    "label": "Project",
                    "editable": False
                },
                "sow": {
                    "type": "dropdown",
                    "options": ["Yes", "No", "Pending"],
                    "label": "SOW",
                    "editable": True
                },
                "pr": {
                    "type": "text",
                    "label": "PR",
                    "editable": True
                },
                "tr": {
                    "type": "text",
                    "label": "TR",
                    "editable": True
                },
                "target_date": {
                    "type": "date",
                    "label": "Commercial Target Date",
                    "editable": True
                },
                "action_by": {
                    "type": "multiselect",
                    "options": ["Corp. Com.", "CPC", "HO Comm.", "Site", "User"],
                    "label": "Action By",
                    "editable": True
                },
                "remarks": {
                    "type": "text",
                    "label": "Remarks",
                    "editable": True
                }
            }
        }
        save_json_file(CONFIG_FILE, config)
    
    # Default packages
    if not os.path.exists(PACKAGES_FILE):
        packages = {}
        save_json_file(PACKAGES_FILE, packages)

def login_required(f):
    """Decorator to require login"""
    @wraps(f)
    def decorated_function(*args, **kwargs):
        if 'username' not in session:
            return redirect(url_for('login'))
        return f(*args, **kwargs)
    return decorated_function

def admin_required(f):
    """Decorator to require admin role"""
    @wraps(f)
    def decorated_function(*args, **kwargs):
        if 'username' not in session:
            return redirect(url_for('login'))
        users = load_json_file(USERS_FILE)
        if users.get(session['username'], {}).get('role') != 'admin':
            flash('Admin access required')
            return redirect(url_for('dashboard'))
        return f(*args, **kwargs)
    return decorated_function

@app.route('/')
def index():
    if 'username' in session:
        return redirect(url_for('dashboard'))
    return redirect(url_for('login'))

@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        username = request.form['username']
        password = request.form['password']
        
        users = load_json_file(USERS_FILE)
        
        if username in users and users[username]['password'] == password:
            session['username'] = username
            session['role'] = users[username]['role']
            session['name'] = users[username]['name']
            session['can_assign'] = users[username]['can_assign']
            return redirect(url_for('dashboard'))
        else:
            flash('Invalid credentials')
    
    return render_template('login.html')

@app.route('/logout')
def logout():
    session.clear()
    return redirect(url_for('login'))

@app.route('/dashboard')
@login_required
def dashboard():
    packages = load_json_file(PACKAGES_FILE)
    config = load_json_file(CONFIG_FILE)
    
    # Filter packages based on user assignments
    if session['role'] != 'admin':
        user_packages = {}
        for pkg_id, pkg_data in packages.items():
            if session['username'] in pkg_data.get('assigned_users', []):
                user_packages[pkg_id] = pkg_data
        packages = user_packages
    
    return render_template('dashboard.html', packages=packages, config=config)

@app.route('/admin')
@admin_required
def admin_panel():
    return render_template('admin.html')

@app.route('/admin/users')
@admin_required
def admin_users():
    users = load_json_file(USERS_FILE)
    return render_template('admin_users.html', users=users)

@app.route('/admin/users/create', methods=['POST'])
@admin_required
def create_user():
    username = request.form['username']
    password = request.form['password']
    role = request.form['role']
    name = request.form['name']
    can_assign = 'can_assign' in request.form
    
    users = load_json_file(USERS_FILE)
    
    if username in users:
        flash('Username already exists')
    else:
        users[username] = {
            'password': password,
            'role': role,
            'name': name,
            'can_assign': can_assign
        }
        if save_json_file(USERS_FILE, users):
            flash('User created successfully')
        else:
            flash('Error creating user')
    
    return redirect(url_for('admin_users'))

@app.route('/admin/users/edit/<username>', methods=['GET', 'POST'])
@admin_required
def edit_user(username):
    users = load_json_file(USERS_FILE)
    
    if username not in users:
        flash('User not found')
        return redirect(url_for('admin_users'))
    
    if request.method == 'POST':
        # Don't allow changing admin username
        if username == 'admin' and request.form['username'] != 'admin':
            flash('Cannot change admin username')
            return redirect(url_for('edit_user', username=username))
        
        new_username = request.form['username']
        password = request.form['password']
        role = request.form['role']
        name = request.form['name']
        can_assign = 'can_assign' in request.form
        
        # If username changed, update the key
        if new_username != username:
            if new_username in users:
                flash('Username already exists')
                return redirect(url_for('edit_user', username=username))
            # Remove old entry and add new one
            user_data = users.pop(username)
            users[new_username] = user_data
            username = new_username
        
        # Update user data
        users[username].update({
            'password': password,
            'role': role,
            'name': name,
            'can_assign': can_assign
        })
        
        if save_json_file(USERS_FILE, users):
            flash('User updated successfully')
        else:
            flash('Error updating user')
        
        return redirect(url_for('admin_users'))
    
    user_data = users[username]
    return render_template('edit_user.html', username=username, user_data=user_data)

@app.route('/admin/users/delete/<username>')
@admin_required
def delete_user(username):
    users = load_json_file(USERS_FILE)
    if username in users and username != 'admin':
        del users[username]
        save_json_file(USERS_FILE, users)
        flash('User deleted successfully')
    else:
        flash('Cannot delete admin user or user not found')
    return redirect(url_for('admin_users'))

@app.route('/admin/config')
@admin_required
def admin_config():
    config = load_json_file(CONFIG_FILE)
    return render_template('admin_config.html', config=config)

@app.route('/admin/config/field/edit/<field_name>', methods=['GET', 'POST'])
@admin_required
def edit_field_config(field_name):
    config = load_json_file(CONFIG_FILE)
    
    if field_name not in config['fields']:
        flash('Field not found')
        return redirect(url_for('admin_config'))
    
    if request.method == 'POST':
        new_field_name = request.form['field_name']
        field_type = request.form['field_type']
        field_label = request.form['field_label']
        editable = 'editable' in request.form
        options = request.form.get('options', '').split(',') if request.form.get('options') else []
        
        # If field name changed, update the key
        if new_field_name != field_name:
            if new_field_name in config['fields']:
                flash('Field name already exists')
                return redirect(url_for('edit_field_config', field_name=field_name))
            # Remove old entry and add new one
            field_data = config['fields'].pop(field_name)
            config['fields'][new_field_name] = field_data
            field_name = new_field_name
        
        # Update field configuration
        config['fields'][field_name] = {
            'type': field_type,
            'label': field_label,
            'editable': editable,
            'options': [opt.strip() for opt in options if opt.strip()]
        }
        
        if save_json_file(CONFIG_FILE, config):
            flash('Field configuration updated successfully')
        else:
            flash('Error updating field configuration')
        
        return redirect(url_for('admin_config'))
    
    field_config = config['fields'][field_name]
    return render_template('edit_field.html', field_name=field_name, field_config=field_config)

@app.route('/admin/config/field', methods=['POST'])
@admin_required
def update_field_config():
    field_name = request.form['field_name']
    field_type = request.form['field_type']
    field_label = request.form['field_label']
    editable = 'editable' in request.form
    options = request.form.get('options', '').split(',') if request.form.get('options') else []
    
    config = load_json_file(CONFIG_FILE)
    
    config['fields'][field_name] = {
        'type': field_type,
        'label': field_label,
        'editable': editable,
        'options': [opt.strip() for opt in options if opt.strip()]
    }
    
    save_json_file(CONFIG_FILE, config)
    flash('Field configuration updated')
    return redirect(url_for('admin_config'))

@app.route('/admin/config/field/delete/<field_name>')
@admin_required
def delete_field_config(field_name):
    config = load_json_file(CONFIG_FILE)
    if field_name in config['fields']:
        del config['fields'][field_name]
        save_json_file(CONFIG_FILE, config)
        flash('Field deleted successfully')
    return redirect(url_for('admin_config'))

@app.route('/packages/create', methods=['GET', 'POST'])
@login_required
def create_package():
    if request.method == 'POST':
        packages = load_json_file(PACKAGES_FILE)
        config = load_json_file(CONFIG_FILE)
        users = load_json_file(USERS_FILE)
        
        # Generate package ID
        package_id = f"PKG_{len(packages) + 1:04d}"
        
        # Get assigned users
        assigned_users = request.form.getlist('assigned_users')
        
        # Build package data
        package_data = {
            'id': package_id,
            'created_by': session['username'],
            'created_at': datetime.now().isoformat(),
            'assigned_users': assigned_users,
            'data': {}
        }
        
        # Add field data
        for field_name, field_config in config['fields'].items():
            if field_config['type'] == 'multiselect':
                package_data['data'][field_name] = request.form.getlist(field_name)
            else:
                package_data['data'][field_name] = request.form.get(field_name, '')
        
        packages[package_id] = package_data
        save_json_file(PACKAGES_FILE, packages)
        flash('Package created successfully')
        return redirect(url_for('dashboard'))
    
    config = load_json_file(CONFIG_FILE)
    users = load_json_file(USERS_FILE)
    return render_template('create_package.html', config=config, users=users)

@app.route('/packages/<package_id>/edit', methods=['GET', 'POST'])
@login_required
def edit_package(package_id):
    packages = load_json_file(PACKAGES_FILE)
    config = load_json_file(CONFIG_FILE)
    users = load_json_file(USERS_FILE)
    
    if package_id not in packages:
        flash('Package not found')
        return redirect(url_for('dashboard'))
    
    package = packages[package_id]
    
    # Check permissions
    if session['role'] != 'admin' and session['username'] not in package.get('assigned_users', []):
        flash('Access denied')
        return redirect(url_for('dashboard'))
    
    if request.method == 'POST':
        # Update only editable fields for non-admin users
        for field_name, field_config in config['fields'].items():
            if session['role'] == 'admin' or field_config.get('editable', False):
                if field_config['type'] == 'multiselect':
                    package['data'][field_name] = request.form.getlist(field_name)
                else:
                    package['data'][field_name] = request.form.get(field_name, '')
        
        # Admin can update assigned users
        if session['role'] == 'admin':
            package['assigned_users'] = request.form.getlist('assigned_users')
        
        package['updated_at'] = datetime.now().isoformat()
        package['updated_by'] = session['username']
        
        packages[package_id] = package
        save_json_file(PACKAGES_FILE, packages)
        flash('Package updated successfully')
        return redirect(url_for('dashboard'))
    
    return render_template('edit_package.html', package=package, config=config, users=users)

@app.route('/packages/<package_id>/delete')
@admin_required
def delete_package(package_id):
    packages = load_json_file(PACKAGES_FILE)
    if package_id in packages:
        del packages[package_id]
        save_json_file(PACKAGES_FILE, packages)
        flash('Package deleted successfully')
    return redirect(url_for('dashboard'))

if __name__ == '__main__':
    init_default_data()
    app.run(debug=True)

================
File: packages.json
================
{}

================
File: templates/admin_config.html
================
{% extends "base.html" %}

{% block title %}Field Configuration - Ticketing Tool{% endblock %}

{% block content %}
<div class="card">
    <div class="card-header">
        <h2>Field Configuration</h2>
    </div>
    <div class="card-body">
        <!-- Add/Edit Field Form -->
        <div class="card mb-3">
            <div class="card-header">
                <h3>Add/Update Field</h3>
            </div>
            <div class="card-body">
                <form method="POST" action="{{ url_for('update_field_config') }}">
                    <div class="form-row">
                        <div class="form-col">
                            <div class="form-group">
                                <label for="field_name">Field Name (System):</label>
                                <input type="text" id="field_name" name="field_name" class="form-control" 
                                       placeholder="e.g., custom_field" required>
                                <small style="color: #666; font-size: 12px;">Use lowercase with underscores</small>
                            </div>
                        </div>
                        <div class="form-col">
                            <div class="form-group">
                                <label for="field_label">Field Label (Display):</label>
                                <input type="text" id="field_label" name="field_label" class="form-control" 
                                       placeholder="e.g., Custom Field" required>
                            </div>
                        </div>
                    </div>
                    
                    <div class="form-row">
                        <div class="form-col">
                            <div class="form-group">
                                <label for="field_type">Field Type:</label>
                                <select id="field_type" name="field_type" class="form-control" required onchange="toggleOptions()">
                                    <option value="text">Text Input</option>
                                    <option value="date">Date Input</option>
                                    <option value="dropdown">Dropdown (Single Select)</option>
                                    <option value="multiselect">Multi-Select</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-col">
                            <div class="form-group">
                                <label>
                                    <input type="checkbox" name="editable" value="1" checked>
                                    Users can edit this field
                                </label>
                                <small style="color: #666; font-size: 12px; display: block;">
                                    If unchecked, only admins can edit
                                </small>
                            </div>
                        </div>
                    </div>
                    
                    <div class="form-group" id="options_group" style="display: none;">
                        <label for="options">Options (for dropdown/multiselect):</label>
                        <textarea id="options" name="options" class="form-control" rows="3" 
                                  placeholder="Option 1, Option 2, Option 3"></textarea>
                        <small style="color: #666; font-size: 12px;">Separate options with commas</small>
                    </div>
                    
                    <div class="form-group text-right">
                        <button type="submit" class="btn btn-success">Save Field</button>
                    </div>
                </form>
            </div>
        </div>
        
        <!-- Existing Fields -->
        <div class="card">
            <div class="card-header">
                <h3>Current Fields</h3>
            </div>
            <div class="card-body">
                {% if config.fields %}
                <table class="table">
                    <thead>
                        <tr>
                            <th>Field Name</th>
                            <th>Label</th>
                            <th>Type</th>
                            <th>Editable</th>
                            <th>Options</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for field_name, field_config in config.fields.items() %}
                        <tr>
                            <td><code>{{ field_name }}</code></td>
                            <td><strong>{{ field_config.label }}</strong></td>
                            <td>
                                <span class="status-ongoing">{{ field_config.type|title }}</span>
                            </td>
                            <td>
                                {% if field_config.get('editable', True) %}
                                <span class="status-completed">Yes</span>
                                {% else %}
                                <span class="status-hold">No</span>
                                {% endif %}
                            </td>
                            <td>
                                {% if field_config.options %}
                                <small style="color: #666;">
                                    {{ field_config.options[:3]|join(', ') }}
                                    {% if field_config.options|length > 3 %}
                                    ... (+{{ field_config.options|length - 3 }} more)
                                    {% endif %}
                                </small>
                                {% else %}
                                <span style="color: #999;">-</span>
                                {% endif %}
                            </td>
                            <td>
                                <a href="{{ url_for('edit_field_config', field_name=field_name) }}" 
                                   class="btn btn-primary" style="font-size: 11px; padding: 4px 8px;">
                                    Edit
                                </a>
                                <a href="{{ url_for('delete_field_config', field_name=field_name) }}" 
                                   class="btn btn-danger" 
                                   style="font-size: 11px; padding: 4px 8px;"
                                   onclick="return confirm('Are you sure you want to delete field {{ field_name }}?')">
                                   Delete
                                </a>
                            </td>
                        </tr>
                        {% endfor %}
                    </tbody>
                </table>
                {% else %}
                <div class="alert alert-info">No fields configured yet.</div>
                {% endif %}
            </div>
        </div>
    </div>
</div>

<div class="text-center mt-3">
    <a href="{{ url_for('admin_panel') }}" class="btn btn-secondary">Back to Admin Panel</a>
</div>

<script>
function toggleOptions() {
    const fieldType = document.getElementById('field_type').value;
    const optionsGroup = document.getElementById('options_group');
    
    if (fieldType === 'dropdown' || fieldType === 'multiselect') {
        optionsGroup.style.display = 'block';
    } else {
        optionsGroup.style.display = 'none';
    }
}

<script>
function toggleOptions() {
    const fieldType = document.getElementById('field_type').value;
    const optionsGroup = document.getElementById('options_group');
    
    if (fieldType === 'dropdown' || fieldType === 'multiselect') {
        optionsGroup.style.display = 'block';
    } else {
        optionsGroup.style.display = 'none';
    }
}

// Initialize options visibility
document.addEventListener('DOMContentLoaded', function() {
    toggleOptions();
});
</script>
{% endblock %}

================
File: templates/admin_users.html
================
{% extends "base.html" %}

{% block title %}User Management - Ticketing Tool{% endblock %}

{% block content %}
<div class="card">
    <div class="card-header">
        <h2>User Management</h2>
    </div>
    <div class="card-body">
        <!-- Create User Form -->
        <div class="card mb-3">
            <div class="card-header">
                <h3>Create New User</h3>
            </div>
            <div class="card-body">
                <form method="POST" action="{{ url_for('create_user') }}">
                    <div class="form-row">
                        <div class="form-col">
                            <div class="form-group">
                                <label for="username">Username:</label>
                                <input type="text" id="username" name="username" class="form-control" required>
                            </div>
                        </div>
                        <div class="form-col">
                            <div class="form-group">
                                <label for="password">Password:</label>
                                <input type="password" id="password" name="password" class="form-control" required>
                            </div>
                        </div>
                    </div>
                    
                    <div class="form-row">
                        <div class="form-col">
                            <div class="form-group">
                                <label for="name">Full Name:</label>
                                <input type="text" id="name" name="name" class="form-control" required>
                            </div>
                        </div>
                        <div class="form-col">
                            <div class="form-group">
                                <label for="role">Role:</label>
                                <select id="role" name="role" class="form-control" required>
                                    <option value="user">User</option>
                                    <option value="admin">Admin</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label>
                            <input type="checkbox" name="can_assign" value="1">
                            Can assign tasks to others
                        </label>
                    </div>
                    
                    <div class="form-group text-right">
                        <button type="submit" class="btn btn-success">Create User</button>
                    </div>
                </form>
            </div>
        </div>
        
        <!-- Users List -->
        <div class="card">
            <div class="card-header">
                <h3>Existing Users</h3>
            </div>
            <div class="card-body">
                {% if users %}
                <table class="table">
                    <thead>
                        <tr>
                            <th>Username</th>
                            <th>Full Name</th>
                            <th>Role</th>
                            <th>Can Assign</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for username, user_data in users.items() %}
                        <tr>
                            <td><strong>{{ username }}</strong></td>
                            <td>{{ user_data.name }}</td>
                            <td>
                                <span class="{% if user_data.role == 'admin' %}status-completed{% else %}status-ongoing{% endif %}">
                                    {{ user_data.role|title }}
                                </span>
                            </td>
                            <td>
                                {% if user_data.can_assign %}
                                <span class="status-completed">Yes</span>
                                {% else %}
                                <span class="status-hold">No</span>
                                {% endif %}
                            </td>
                            <td>
                                {% if username != 'admin' %}
                                <a href="{{ url_for('edit_user', username=username) }}" 
                                   class="btn btn-primary" 
                                   style="font-size: 11px; padding: 4px 8px;">
                                   Edit
                                </a>
                                <a href="{{ url_for('delete_user', username=username) }}" 
                                   class="btn btn-danger" 
                                   style="font-size: 11px; padding: 4px 8px;"
                                   onclick="return confirm('Are you sure you want to delete user {{ username }}?')">
                                   Delete
                                </a>
                                {% else %}
                                <a href="{{ url_for('edit_user', username=username) }}" 
                                   class="btn btn-primary" 
                                   style="font-size: 11px; padding: 4px 8px;">
                                   Edit
                                </a>
                                <span style="color: #999; font-size: 11px;">Cannot Delete</span>
                                {% endif %}
                            </td>
                        </tr>
                        {% endfor %}
                    </tbody>
                </table>
                {% else %}
                <div class="alert alert-info">No users found.</div>
                {% endif %}
            </div>
        </div>
    </div>
</div>

<div class="text-center mt-3">
    <a href="{{ url_for('admin_panel') }}" class="btn btn-secondary">Back to Admin Panel</a>
</div>
{% endblock %}

================
File: templates/admin.html
================
{% extends "base.html" %}

{% block title %}Admin Panel - Ticketing Tool{% endblock %}

{% block content %}
<div class="card">
    <div class="card-header">
        <h2>Admin Panel</h2>
    </div>
    <div class="card-body">
        <div class="form-row">
            <div class="form-col">
                <div class="card">
                    <div class="card-header">
                        <h3>User Management</h3>
                    </div>
                    <div class="card-body">
                        <p>Manage system users, roles, and permissions.</p>
                        <a href="{{ url_for('admin_users') }}" class="btn btn-primary">Manage Users</a>
                    </div>
                </div>
            </div>
            
            <div class="form-col">
                <div class="card">
                    <div class="card-header">
                        <h3>Field Configuration</h3>
                    </div>
                    <div class="card-body">
                        <p>Configure form fields, dropdowns, and field properties.</p>
                        <a href="{{ url_for('admin_config') }}" class="btn btn-primary">Configure Fields</a>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="form-row">
            <div class="form-col">
                <div class="card">
                    <div class="card-header">
                        <h3>Package Management</h3>
                    </div>
                    <div class="card-body">
                        <p>View and manage all packages in the system.</p>
                        <a href="{{ url_for('dashboard') }}" class="btn btn-primary">View All Packages</a>
                        <a href="{{ url_for('create_package') }}" class="btn btn-success">Create Package</a>
                    </div>
                </div>
            </div>
            
            <div class="form-col">
                <div class="card">
                    <div class="card-header">
                        <h3>System Information</h3>
                    </div>
                    <div class="card-body">
                        <p><strong>Application:</strong> Ticketing Tool v1.0</p>
                        <p><strong>Storage:</strong> JSON Files</p>
                        <p><strong>Status:</strong> Running</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

================
File: templates/base.html
================
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% block title %}Ticketing Tool{% endblock %}</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: Arial, sans-serif;
            background-color: #f5f5f5;
            color: #333;
        }
        
        .header {
            background-color: #0066cc;
            color: white;
            padding: 10px 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .header h1 {
            font-size: 18px;
        }
        
        .user-info {
            display: flex;
            align-items: center;
            gap: 15px;
        }
        
        .nav {
            background-color: #e6f2ff;
            padding: 10px 20px;
            border-bottom: 1px solid #ccc;
        }
        
        .nav a {
            color: #0066cc;
            text-decoration: none;
            margin-right: 20px;
            font-size: 14px;
        }
        
        .nav a:hover {
            text-decoration: underline;
        }
        
        .container {
            max-width: 1200px;
            margin: 20px auto;
            padding: 0 20px;
        }
        
        .card {
            background: white;
            border: 1px solid #ddd;
            margin-bottom: 20px;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        }
        
        .card-header {
            background-color: #f8f9fa;
            border-bottom: 1px solid #ddd;
            padding: 15px;
            font-weight: bold;
        }
        
        .card-body {
            padding: 15px;
        }
        
        .form-group {
            margin-bottom: 15px;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
            font-size: 14px;
        }
        
        .form-control {
            width: 100%;
            padding: 8px;
            border: 1px solid #ccc;
            font-size: 14px;
        }
        
        .form-control:focus {
            outline: none;
            border-color: #0066cc;
        }
        
        .btn {
            padding: 8px 16px;
            border: none;
            cursor: pointer;
            font-size: 14px;
            text-decoration: none;
            display: inline-block;
            margin-right: 10px;
        }
        
        .btn-primary {
            background-color: #0066cc;
            color: white;
        }
        
        .btn-secondary {
            background-color: #6c757d;
            color: white;
        }
        
        .btn-danger {
            background-color: #dc3545;
            color: white;
        }
        
        .btn-success {
            background-color: #28a745;
            color: white;
        }
        
        .btn:hover {
            opacity: 0.9;
        }
        
        .table {
            width: 100%;
            border-collapse: collapse;
            font-size: 12px;
        }
        
        .table th,
        .table td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
            vertical-align: top;
        }
        
        .table th {
            background-color: #f8f9fa;
            font-weight: bold;
            font-size: 11px;
        }
        
        .table tbody tr:nth-child(even) {
            background-color: #f9f9f9;
        }
        
        .alert {
            padding: 12px;
            margin-bottom: 15px;
            border: 1px solid transparent;
        }
        
        .alert-success {
            color: #155724;
            background-color: #d4edda;
            border-color: #c3e6cb;
        }
        
        .alert-danger {
            color: #721c24;
            background-color: #f8d7da;
            border-color: #f5c6cb;
        }
        
        .alert-info {
            color: #0c5460;
            background-color: #d1ecf1;
            border-color: #bee5eb;
        }
        
        .form-row {
            display: flex;
            gap: 15px;
            margin-bottom: 15px;
        }
        
        .form-col {
            flex: 1;
        }
        
        .text-right {
            text-align: right;
        }
        
        .text-center {
            text-align: center;
        }
        
        .mb-3 {
            margin-bottom: 15px;
        }
        
        .mt-3 {
            margin-top: 15px;
        }
        
        select[multiple] {
            height: 120px;
        }
        
        .field-actions {
            display: flex;
            gap: 10px;
            align-items: center;
        }
        
        .status-ongoing { background-color: #28a745; color: white; padding: 2px 6px; border-radius: 3px; font-size: 11px; }
        .status-hold { background-color: #ffc107; color: black; padding: 2px 6px; border-radius: 3px; font-size: 11px; }
        .status-completed { background-color: #17a2b8; color: white; padding: 2px 6px; border-radius: 3px; font-size: 11px; }
        .status-cancelled { background-color: #dc3545; color: white; padding: 2px 6px; border-radius: 3px; font-size: 11px; }
    </style>
</head>
<body>
    {% if session.username %}
    <div class="header">
        <h1>Ticketing Tool</h1>
        <div class="user-info">
            <span>{{ session.name }} ({{ session.role|title }})</span>
            <a href="{{ url_for('logout') }}" style="color: white;">Logout</a>
        </div>
    </div>
    
    <div class="nav">
        <a href="{{ url_for('dashboard') }}">Dashboard</a>
        {% if session.can_assign or session.role == 'admin' %}
        <a href="{{ url_for('create_package') }}">Create Package</a>
        {% endif %}
        {% if session.role == 'admin' %}
        <a href="{{ url_for('admin_panel') }}">Admin Panel</a>
        {% endif %}
    </div>
    {% endif %}
    
    <div class="container">
        {% with messages = get_flashed_messages() %}
        {% if messages %}
        {% for message in messages %}
        <div class="alert alert-info">{{ message }}</div>
        {% endfor %}
        {% endif %}
        {% endwith %}
        
        {% block content %}{% endblock %}
    </div>
</body>
</html>

================
File: templates/create_package.html
================
{% extends "base.html" %}

{% block title %}Create Package - Ticketing Tool{% endblock %}

{% block content %}
<div class="card">
    <div class="card-header">
        <h2>Create New Package</h2>
    </div>
    <div class="card-body">
        <form method="POST">
            <!-- Assigned Users Section -->
            <div class="form-group">
                <label for="assigned_users">Assign to Users:</label>
                <select name="assigned_users" id="assigned_users" class="form-control" multiple required>
                    {% for username, user_data in users.items() %}
                    {% if username != 'admin' %}
                    <option value="{{ username }}">{{ user_data.name }} ({{ username }})</option>
                    {% endif %}
                    {% endfor %}
                </select>
                <small style="color: #666; font-size: 12px;">Hold Ctrl/Cmd to select multiple users</small>
            </div>
            
            <hr style="margin: 20px 0;">
            
            <!-- Dynamic Fields -->
            <div class="form-row">
                {% set field_count = 0 %}
                {% for field_name, field_config in config.fields.items() %}
                
                {% if field_count % 2 == 0 and field_count > 0 %}
                </div>
                <div class="form-row">
                {% endif %}
                
                <div class="form-col">
                    <div class="form-group">
                        <label for="{{ field_name }}">{{ field_config.label }}:</label>
                        
                        {% if field_config.type == 'text' %}
                        <input type="text" id="{{ field_name }}" name="{{ field_name }}" class="form-control">
                        
                        {% elif field_config.type == 'date' %}
                        <input type="date" id="{{ field_name }}" name="{{ field_name }}" class="form-control">
                        
                        {% elif field_config.type == 'dropdown' %}
                        <select id="{{ field_name }}" name="{{ field_name }}" class="form-control">
                            <option value="">Select...</option>
                            {% for option in field_config.options %}
                            <option value="{{ option }}">{{ option }}</option>
                            {% endfor %}
                        </select>
                        
                        {% elif field_config.type == 'multiselect' %}
                        <select id="{{ field_name }}" name="{{ field_name }}" class="form-control" multiple>
                            {% for option in field_config.options %}
                            <option value="{{ option }}">{{ option }}</option>
                            {% endfor %}
                        </select>
                        <small style="color: #666; font-size: 12px;">Hold Ctrl/Cmd to select multiple</small>
                        
                        {% endif %}
                    </div>
                </div>
                
                {% set field_count = field_count + 1 %}
                {% endfor %}
            </div>
            
            <div class="form-group text-right mt-3">
                <a href="{{ url_for('dashboard') }}" class="btn btn-secondary">Cancel</a>
                <button type="submit" class="btn btn-success">Create Package</button>
            </div>
        </form>
    </div>
</div>

<script>
// Auto-expand textareas
document.addEventListener('DOMContentLoaded', function() {
    const textareas = document.querySelectorAll('input[type="text"]');
    textareas.forEach(textarea => {
        if (textarea.name === 'remarks') {
            const newTextarea = document.createElement('textarea');
            newTextarea.name = textarea.name;
            newTextarea.id = textarea.id;
            newTextarea.className = textarea.className;
            newTextarea.rows = 3;
            textarea.parentNode.replaceChild(newTextarea, textarea);
        }
    });
});
</script>
{% endblock %}

================
File: templates/dashboard.html
================
{% extends "base.html" %}

{% block title %}Dashboard - Ticketing Tool{% endblock %}

{% block content %}
<div class="card">
    <div class="card-header">
        <div style="display: flex; justify-content: space-between; align-items: center;">
            <h2>Packages Dashboard</h2>
            {% if session.can_assign or session.role == 'admin' %}
            <a href="{{ url_for('create_package') }}" class="btn btn-success">Create New Package</a>
            {% endif %}
        </div>
    </div>
    <div class="card-body">
        {% if packages %}
        <div style="overflow-x: auto;">
            <table class="table">
                <thead>
                    <tr>
                        <th>Package ID</th>
                        {% for field_name, field_config in config.fields.items() %}
                        <th>{{ field_config.label }}</th>
                        {% endfor %}
                        <th>Assigned Users</th>
                        <th>Created By</th>
                        <th>Created At</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    {% for package_id, package in packages.items() %}
                    <tr>
                        <td><strong>{{ package.id }}</strong></td>
                        {% for field_name, field_config in config.fields.items() %}
                        <td>
                            {% if field_config.type == 'multiselect' %}
                                {{ package.data.get(field_name, [])|join(', ') }}
                            {% elif field_name == 'status' %}
                                {% set status = package.data.get(field_name, '').lower() %}
                                <span class="status-{{ status }}">{{ package.data.get(field_name, '') }}</span>
                            {% else %}
                                {{ package.data.get(field_name, '') }}
                            {% endif %}
                        </td>
                        {% endfor %}
                        <td>
                            {% for user in package.assigned_users %}
                                <span style="background-color: #e9ecef; padding: 2px 6px; border-radius: 3px; margin-right: 5px; font-size: 11px;">{{ user }}</span>
                            {% endfor %}
                        </td>
                        <td>{{ package.created_by }}</td>
                        <td>{{ package.created_at[:10] if package.created_at else '' }}</td>
                        <td>
                            {% if session.role == 'admin' or session.username in package.assigned_users %}
                            <a href="{{ url_for('edit_package', package_id=package_id) }}" class="btn btn-primary" style="font-size: 11px; padding: 4px 8px;">Edit</a>
                            {% endif %}
                            {% if session.role == 'admin' %}
                            <a href="{{ url_for('delete_package', package_id=package_id) }}" 
                               class="btn btn-danger" 
                               style="font-size: 11px; padding: 4px 8px;"
                               onclick="return confirm('Are you sure you want to delete this package?')">Delete</a>
                            {% endif %}
                        </td>
                    </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>
        {% else %}
        <div class="alert alert-info">
            <strong>No packages found.</strong>
            {% if session.can_assign or session.role == 'admin' %}
            <a href="{{ url_for('create_package') }}">Create your first package</a>.
            {% else %}
            Contact an administrator to assign packages to you.
            {% endif %}
        </div>
        {% endif %}
    </div>
</div>

{% if session.role == 'admin' %}
<div class="card">
    <div class="card-header">
        <h3>Admin Quick Stats</h3>
    </div>
    <div class="card-body">
        <div class="form-row">
            <div class="form-col text-center">
                <h4>{{ packages|length }}</h4>
                <p>Total Packages</p>
            </div>
            <div class="form-col text-center">
                <h4>{{ packages.values()|selectattr('data.status', 'equalto', 'Ongoing')|list|length }}</h4>
                <p>Ongoing</p>
            </div>
            <div class="form-col text-center">
                <h4>{{ packages.values()|selectattr('data.status', 'equalto', 'Hold')|list|length }}</h4>
                <p>On Hold</p>
            </div>
            <div class="form-col text-center">
                <h4>{{ packages.values()|selectattr('data.status', 'equalto', 'Completed')|list|length }}</h4>
                <p>Completed</p>
            </div>
        </div>
    </div>
</div>
{% endif %}
{% endblock %}

================
File: templates/edit_field.html
================
{% extends "base.html" %}

{% block title %}Edit Field - Ticketing Tool{% endblock %}

{% block content %}
<div class="card">
    <div class="card-header">
        <h2>Edit Field: {{ field_name }}</h2>
    </div>
    <div class="card-body">
        <form method="POST">
            <div class="form-row">
                <div class="form-col">
                    <div class="form-group">
                        <label for="field_name">Field Name (System):</label>
                        <input type="text" id="field_name" name="field_name" class="form-control" 
                               value="{{ field_name }}" required>
                        <small style="color: #666; font-size: 12px;">Use lowercase with underscores</small>
                    </div>
                </div>
                <div class="form-col">
                    <div class="form-group">
                        <label for="field_label">Field Label (Display):</label>
                        <input type="text" id="field_label" name="field_label" class="form-control" 
                               value="{{ field_config.label }}" required>
                    </div>
                </div>
            </div>
            
            <div class="form-row">
                <div class="form-col">
                    <div class="form-group">
                        <label for="field_type">Field Type:</label>
                        <select id="field_type" name="field_type" class="form-control" required onchange="toggleOptions()">
                            <option value="text" {% if field_config.type == 'text' %}selected{% endif %}>Text Input</option>
                            <option value="date" {% if field_config.type == 'date' %}selected{% endif %}>Date Input</option>
                            <option value="dropdown" {% if field_config.type == 'dropdown' %}selected{% endif %}>Dropdown (Single Select)</option>
                            <option value="multiselect" {% if field_config.type == 'multiselect' %}selected{% endif %}>Multi-Select</option>
                        </select>
                    </div>
                </div>
                <div class="form-col">
                    <div class="form-group">
                        <label>
                            <input type="checkbox" name="editable" value="1" 
                                   {% if field_config.get('editable', True) %}checked{% endif %}>
                            Users can edit this field
                        </label>
                        <small style="color: #666; font-size: 12px; display: block;">
                            If unchecked, only admins can edit
                        </small>
                    </div>
                </div>
            </div>
            
            <div class="form-group" id="options_group">
                <label for="options">Options (for dropdown/multiselect):</label>
                <textarea id="options" name="options" class="form-control" rows="3" 
                          placeholder="Option 1, Option 2, Option 3">{{ field_config.get('options', [])|join(', ') }}</textarea>
                <small style="color: #666; font-size: 12px;">Separate options with commas</small>
            </div>
            
            <div class="form-group text-right">
                <a href="{{ url_for('admin_config') }}" class="btn btn-secondary">Cancel</a>
                <button type="submit" class="btn btn-primary">Update Field</button>
            </div>
        </form>
    </div>
</div>

<div class="card">
    <div class="card-header">
        <h3>Current Configuration</h3>
    </div>
    <div class="card-body">
        <div class="form-row">
            <div class="form-col">
                <strong>Field Name:</strong> <code>{{ field_name }}</code><br>
                <strong>Label:</strong> {{ field_config.label }}<br>
                <strong>Type:</strong> <span class="status-ongoing">{{ field_config.type|title }}</span>
            </div>
            <div class="form-col">
                <strong>Editable:</strong> 
                {% if field_config.get('editable', True) %}
                <span class="status-completed">Yes</span>
                {% else %}
                <span class="status-hold">No</span>
                {% endif %}<br>
                <strong>Options:</strong> 
                {% if field_config.get('options') %}
                {{ field_config.options|join(', ') }}
                {% else %}
                <span style="color: #999;">None</span>
                {% endif %}
            </div>
        </div>
    </div>
</div>

<div class="card">
    <div class="card-header">
        <h3>Danger Zone</h3>
    </div>
    <div class="card-body">
        <p><strong>Delete Field:</strong> This will remove the field from all packages. This action cannot be undone.</p>
        <a href="{{ url_for('delete_field_config', field_name=field_name) }}" 
           class="btn btn-danger"
           onclick="return confirm('Are you sure you want to permanently delete field {{ field_name }}? This will remove it from all packages and cannot be undone.')">
           Delete Field
        </a>
    </div>
</div>

<script>
function toggleOptions() {
    const fieldType = document.getElementById('field_type').value;
    const optionsGroup = document.getElementById('options_group');
    
    if (fieldType === 'dropdown' || fieldType === 'multiselect') {
        optionsGroup.style.display = 'block';
    } else {
        optionsGroup.style.display = 'none';
    }
}

// Initialize options visibility
document.addEventListener('DOMContentLoaded', function() {
    toggleOptions();
});
</script>
{% endblock %}

================
File: templates/edit_package.html
================
{% extends "base.html" %}

{% block title %}Edit Package - Ticketing Tool{% endblock %}

{% block content %}
<div class="card">
    <div class="card-header">
        <h2>Edit Package: {{ package.id }}</h2>
    </div>
    <div class="card-body">
        <form method="POST">
            <!-- Package Info -->
            <div class="alert alert-info">
                <strong>Package Info:</strong><br>
                Created by: {{ package.created_by }} on {{ package.created_at[:10] if package.created_at else 'Unknown' }}<br>
                {% if package.updated_at %}
                Last updated by: {{ package.updated_by }} on {{ package.updated_at[:10] }}
                {% endif %}
            </div>
            
            <!-- Assigned Users Section (Admin only) -->
            {% if session.role == 'admin' %}
            <div class="form-group">
                <label for="assigned_users">Assign to Users:</label>
                <select name="assigned_users" id="assigned_users" class="form-control" multiple required>
                    {% for username, user_data in users.items() %}
                    {% if username != 'admin' %}
                    <option value="{{ username }}" {% if username in package.assigned_users %}selected{% endif %}>
                        {{ user_data.name }} ({{ username }})
                    </option>
                    {% endif %}
                    {% endfor %}
                </select>
                <small style="color: #666; font-size: 12px;">Hold Ctrl/Cmd to select multiple users</small>
            </div>
            
            <hr style="margin: 20px 0;">
            {% endif %}
            
            <!-- Dynamic Fields -->
            <div class="form-row">
                {% set field_count = 0 %}
                {% for field_name, field_config in config.fields.items() %}
                
                {% set is_editable = session.role == 'admin' or field_config.get('editable', False) %}
                
                {% if field_count % 2 == 0 and field_count > 0 %}
                </div>
                <div class="form-row">
                {% endif %}
                
                <div class="form-col">
                    <div class="form-group">
                        <label for="{{ field_name }}">
                            {{ field_config.label }}:
                            {% if not is_editable %}
                            <span style="color: #999; font-size: 11px;">(Read-only)</span>
                            {% endif %}
                        </label>
                        
                        {% if field_config.type == 'text' %}
                        {% if field_name == 'remarks' %}
                        <textarea id="{{ field_name }}" name="{{ field_name }}" class="form-control" rows="3" 
                                  {% if not is_editable %}readonly{% endif %}>{{ package.data.get(field_name, '') }}</textarea>
                        {% else %}
                        <input type="text" id="{{ field_name }}" name="{{ field_name }}" class="form-control" 
                               value="{{ package.data.get(field_name, '') }}" {% if not is_editable %}readonly{% endif %}>
                        {% endif %}
                        
                        {% elif field_config.type == 'date' %}
                        <input type="date" id="{{ field_name }}" name="{{ field_name }}" class="form-control" 
                               value="{{ package.data.get(field_name, '') }}" {% if not is_editable %}readonly{% endif %}>
                        
                        {% elif field_config.type == 'dropdown' %}
                        <select id="{{ field_name }}" name="{{ field_name }}" class="form-control" {% if not is_editable %}disabled{% endif %}>
                            <option value="">Select...</option>
                            {% for option in field_config.options %}
                            <option value="{{ option }}" {% if option == package.data.get(field_name) %}selected{% endif %}>
                                {{ option }}
                            </option>
                            {% endfor %}
                        </select>
                        {% if not is_editable %}
                        <input type="hidden" name="{{ field_name }}" value="{{ package.data.get(field_name, '') }}">
                        {% endif %}
                        
                        {% elif field_config.type == 'multiselect' %}
                        <select id="{{ field_name }}" name="{{ field_name }}" class="form-control" multiple {% if not is_editable %}disabled{% endif %}>
                            {% for option in field_config.options %}
                            <option value="{{ option }}" {% if option in package.data.get(field_name, []) %}selected{% endif %}>
                                {{ option }}
                            </option>
                            {% endfor %}
                        </select>
                        {% if not is_editable %}
                        {% for value in package.data.get(field_name, []) %}
                        <input type="hidden" name="{{ field_name }}" value="{{ value }}">
                        {% endfor %}
                        {% else %}
                        <small style="color: #666; font-size: 12px;">Hold Ctrl/Cmd to select multiple</small>
                        {% endif %}
                        
                        {% endif %}
                    </div>
                </div>
                
                {% set field_count = field_count + 1 %}
                {% endfor %}
            </div>
            
            <div class="form-group text-right mt-3">
                <a href="{{ url_for('dashboard') }}" class="btn btn-secondary">Cancel</a>
                <button type="submit" class="btn btn-primary">Update Package</button>
            </div>
        </form>
    </div>
</div>

<!-- Assignment History (if admin) -->
{% if session.role == 'admin' %}
<div class="card">
    <div class="card-header">
        <h3>Currently Assigned Users</h3>
    </div>
    <div class="card-body">
        {% if package.assigned_users %}
        <div class="form-row">
            {% for username in package.assigned_users %}
            {% set user_data = users.get(username, {}) %}
            <div class="form-col">
                <div style="padding: 10px; background-color: #f8f9fa; border: 1px solid #dee2e6; text-align: center;">
                    <strong>{{ user_data.get('name', username) }}</strong><br>
                    <small style="color: #666;">{{ username }}</small><br>
                    <small style="color: #666;">{{ user_data.get('role', 'Unknown') }}</small>
                </div>
            </div>
            {% endfor %}
        </div>
        {% else %}
        <div class="alert alert-info">No users assigned to this package.</div>
        {% endif %}
    </div>
</div>
{% endif %}
{% endblock %}

================
File: templates/edit_user.html
================
{% extends "base.html" %}

{% block title %}Edit User - Ticketing Tool{% endblock %}

{% block content %}
<div class="card">
    <div class="card-header">
        <h2>Edit User: {{ username }}</h2>
    </div>
    <div class="card-body">
        <form method="POST">
            <div class="form-row">
                <div class="form-col">
                    <div class="form-group">
                        <label for="username">Username:</label>
                        <input type="text" id="username" name="username" class="form-control" 
                               value="{{ username }}" required
                               {% if username == 'admin' %}readonly title="Admin username cannot be changed"{% endif %}>
                        {% if username == 'admin' %}
                        <small style="color: #666; font-size: 12px;">Admin username cannot be changed</small>
                        {% endif %}
                    </div>
                </div>
                <div class="form-col">
                    <div class="form-group">
                        <label for="password">Password:</label>
                        <input type="password" id="password" name="password" class="form-control" 
                               value="{{ user_data.password }}" required>
                        <small style="color: #666; font-size: 12px;">Leave as-is or enter new password</small>
                    </div>
                </div>
            </div>
            
            <div class="form-row">
                <div class="form-col">
                    <div class="form-group">
                        <label for="name">Full Name:</label>
                        <input type="text" id="name" name="name" class="form-control" 
                               value="{{ user_data.name }}" required>
                    </div>
                </div>
                <div class="form-col">
                    <div class="form-group">
                        <label for="role">Role:</label>
                        <select id="role" name="role" class="form-control" required>
                            <option value="user" {% if user_data.role == 'user' %}selected{% endif %}>User</option>
                            <option value="admin" {% if user_data.role == 'admin' %}selected{% endif %}>Admin</option>
                        </select>
                    </div>
                </div>
            </div>
            
            <div class="form-group">
                <label>
                    <input type="checkbox" name="can_assign" value="1" 
                           {% if user_data.can_assign %}checked{% endif %}>
                    Can assign tasks to others
                </label>
            </div>
            
            <div class="form-group text-right">
                <a href="{{ url_for('admin_users') }}" class="btn btn-secondary">Cancel</a>
                <button type="submit" class="btn btn-primary">Update User</button>
            </div>
        </form>
    </div>
</div>

{% if username != 'admin' %}
<div class="card">
    <div class="card-header">
        <h3>Danger Zone</h3>
    </div>
    <div class="card-body">
        <p><strong>Delete User:</strong> This action cannot be undone.</p>
        <a href="{{ url_for('delete_user', username=username) }}" 
           class="btn btn-danger"
           onclick="return confirm('Are you sure you want to permanently delete user {{ username }}? This action cannot be undone.')">
           Delete User
        </a>
    </div>
</div>
{% endif %}
{% endblock %}

================
File: templates/login.html
================
{% extends "base.html" %}

{% block title %}Login - Ticketing Tool{% endblock %}

{% block content %}
<div style="max-width: 400px; margin: 100px auto;">
    <div class="card">
        <div class="card-header">
            <h2 style="text-align: center; margin: 0;">Login</h2>
        </div>
        <div class="card-body">
            <form method="POST">
                <div class="form-group">
                    <label for="username">Username:</label>
                    <input type="text" id="username" name="username" class="form-control" required>
                </div>
                
                <div class="form-group">
                    <label for="password">Password:</label>
                    <input type="password" id="password" name="password" class="form-control" required>
                </div>
                
                <div class="form-group text-center">
                    <button type="submit" class="btn btn-primary">Login</button>
                </div>
            </form>
            
            <div style="margin-top: 20px; padding-top: 20px; border-top: 1px solid #eee; font-size: 12px; color: #666;">
                <strong>Default Credentials:</strong><br>
                Admin: admin / admin123<br>
                User: user1 / user123
            </div>
        </div>
    </div>
</div>
{% endblock %}

================
File: users.json
================
{
  "admin": {
    "password": "admin123",
    "role": "admin",
    "name": "Administrator",
    "can_assign": true
  },
  "user1": {
    "password": "user123",
    "role": "user",
    "name": "User One",
    "can_assign": false
  }
}
